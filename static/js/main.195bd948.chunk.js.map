{"version":3,"sources":["App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/navbar/navbar.js","components/Container/textloop.js","App.js","index.js","components/Cards/Cards.module.css","components/Chart/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Info","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","fontFamily","margin","label","textTransform","Button","width","Card","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","loading","safe","springConfig","stiffness","damping","interval","Grid","spacing","justify","item","xs","md","component","cx","card","infected","CardContent","Typography","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","items","href","this","itemTextColor","titleColor","hoverColor","logo","Component","setState","Cards","CountryPicker","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.195bd948.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__23rSf\",\"image\":\"App_image__UqPRx\"};","import React from 'react';\r\nimport {Card, CardContent, Grid, Typography ,withStyles,createMuiTheme,ThemeProvider} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextLoop from \"react-text-loop\";\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(to right, #4ac29a, #bdfff3)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        fontFamily: \"monospace\",\r\n        margin: \"auto\",\r\n},\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(to bottom, #eef2f3, #8e9eab);',\r\n        color: 'white',\r\n        height: 250,\r\n        width: 400,\r\n        padding: '50 px',\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Card);\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return (\r\n            <div className={cx(styles.loading)}>\r\n                <TextLoop>\r\n                    <h1>...LOADING...</h1>\r\n                    <h1>...Please Wait...</h1>\r\n                </TextLoop>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.loading}>\r\n                <h1>Stay Home\r\n                    <div className={styles.safe}>\r\n                <TextLoop springConfig={{ stiffness: 180, damping: 20 }} interval={2000}>\r\n            <h1> Safe</h1>\r\n            <h1> Healthy</h1>\r\n            </TextLoop>\r\n                    </div>\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography variant={'h4'} color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of active cases of COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography variant={\"h4\"} color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of recoveries from COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography variant={'h4'} color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of deaths caused by COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\nexport default Info;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Bar, Line} from 'react-chartjs-2';\r\n\r\nimport {fetchDailyData} from '../../api';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Showing Status for ${country} Powered by LearningTools` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    },\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {FormControl, NativeSelect} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default Countries;\r\n","import React, {Component} from 'react'\r\nimport Navbar from 'navbar-react'\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        items: [\r\n            {\r\n                href: '#',\r\n                name: 'Home'\r\n            },\r\n            {\r\n                href: 'https://covid.learningtools.com.pk',\r\n                name: \"Pakistan's Data\"\r\n            },\r\n            {\r\n                href: 'https://learningtools.com.pk',\r\n                name: 'About Me'\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar\r\n                items={this.state.items}\r\n                color={'#8e9eab'}\r\n                itemTextColor={'#101010'}\r\n                titleColor={'#fff'}\r\n                title={''}\r\n                hoverColor={'#000'}\r\n                logo={'https://learningtools.com.pk/covid/static/media/image.d7265326.png'}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TextLoop from \"react-text-loop/es\";\r\nimport styles from \"../Cards/Cards.module.css\";\r\nconst warning1 = () => {\r\n    return(\r\n        <div className={styles.loading}>\r\n            <h1>Stay Home=\r\n                <TextLoop springConfig={{ stiffness: 180, damping: 8 }} interval={2000}>\r\n                    <span> Safe</span>\r\n                    <span> Healthy</span>\r\n                </TextLoop>\r\n            </h1>\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default warning1();\r\n","import React from 'react';\r\nimport {Cards, Chart, CountryPicker, HeaderThree, Navbar} from './components';\r\nimport {fetchData} from './api/';\r\nimport styles from './App.module.css';\r\nimport './App.css';\r\nimport warning1 from './components/Container/textloop'\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n\r\n        this.setState({ data, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div>\r\n            <div className={styles.container}>\r\n                <Navbar></Navbar>\r\n                <warning1/>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1fO27\",\"card\":\"Cards_card__SJfAB\",\"infected\":\"Cards_infected__32eyP\",\"recovered\":\"Cards_recovered__13OOC\",\"deaths\":\"Cards_deaths__kSZhi\",\"button\":\"Cards_button__30GCo\",\"loading\":\"Cards_loading__3YbPI\",\"safe\":\"Cards_safe__s18aJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3P2mG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3QJJG\"};"],"sourceRoot":""}